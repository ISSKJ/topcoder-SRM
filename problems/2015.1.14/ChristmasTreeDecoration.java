import java.util.*;

public class ChristmasTreeDecoration {

    public int solve(int[] col, int[] x, int[] y) {

        int res = 0;
        for (int j = 0; j < x.length; j++) {
            int tree1 = col[x[j]-1];
            int tree2 = col[y[j]-1];

            if (tree1 != tree2) {
                res++;
            }
        }

        int num = col.length-1;

        System.out.println("num:"+num);
        System.out.println("res:"+res);

        return num <= res ? 0 : num - res;
    }

    private static void test(int res, int exp) {
        System.out.println(String.format("\n[EXP]=%d\n[RES]=%d\n", exp, res));
    }


    public static void main(String[] args) {
        ChristmasTreeDecoration obj = new ChristmasTreeDecoration();

        test(obj.solve(
                    new int[]{1,1,2,2},
                    new int[]{1,2,3,4},
                    new int[]{2,3,4,1}), 1);
        // We have four stars. Stars 1 and 2 have the same color, and stars 3 a 4 have the same color. 
        // There are four pairs of stars we may connect: 1-2, 2-3, 3-4, and 4-1. 
        // One optimal solution is to use the following ribbons: 2-3, 3-4, and 4-1. 
        // Two of these are beautiful (2-3 and 4-1) and only one (3-4) is not beautiful.
        //
        // same: 1-2, 3-4 different: 2-3, 4-1

        test(obj.solve(
                    new int[]{1,1,2,2},
                    new int[]{1,2,3,4,1,2},
                    new int[]{2,3,4,1,3,4}), 0);
        // Now we can have three beautiful ribbons.
        // same: 1-2, 3-4 different: 2-3, 4-1, 1-3, 2-4

        test(obj.solve(
                    new int[]{50,50,50,50},
                    new int[]{1,2,3,1,1,2},
                    new int[]{2,3,4,4,3,4}), 3);
        // All stars have the same color. Regardless of how we attach the ribbons, none of them will be beautiful.

        test(obj.solve(
                    new int[]{1,4,2,3},
                    new int[]{1,2,3},
                    new int[]{2,3,4}), 0);

        test(obj.solve(
                    new int[]{1,1,1,2,2,2,3,3,3,4,4,4},
                    new int[]{1,2,3,4,5,6,7,8,9,10,11,12,1,1,1,1,1,1},
                    new int[]{2,3,1,5,6,4,8,9,7,11,12,10,5,7,12,11,6,4}), 5);

        test(obj.solve(
                    new int[]{13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13},
                    new int[]{4, 16, 42, 22, 40, 48, 41, 29, 2, 16, 48, 41, 22, 3, 40, 27, 43, 28, 24, 34, 39, 38, 40, 27, 3, 48, 39, 12, 29, 14, 16, 34, 44, 13, 36, 50, 43, 17, 39, 37, 39, 18, 21, 5, 7, 8, 20, 44, 9, 41, 38, 10, 23, 3, 12, 47, 13, 21, 14, 38, 42, 10, 4, 40, 49, 6, 33, 27, 44, 30, 36, 26, 20, 17, 36, 3, 45, 6, 23, 10, 12, 31, 44, 27, 18, 22, 18, 44, 26, 17, 5, 43, 33, 2, 50, 27, 48, 4, 45, 30, 6, 34, 18, 11, 27, 31, 33, 2, 44, 32, 32, 35, 37, 2, 30, 35, 10, 40, 12, 37, 29, 40, 8, 46, 8, 19, 1, 1, 12, 6, 16, 23, 20, 41, 29, 21, 29, 40, 19, 2, 26, 1, 44, 24, 40, 7, 9, 45, 36, 41, 24, 37, 1, 21, 10},
                    new int[]{48, 15, 30, 18, 38, 12, 42, 33, 41, 31, 19, 47, 46, 38, 32, 49, 5, 1, 13, 17, 10, 25, 14, 17, 34, 23, 47, 14, 35, 6, 44, 13, 1, 50, 33, 33, 27, 44, 43, 15, 45, 28, 13, 26, 22, 35, 32, 11, 15, 46, 11, 25, 17, 45, 30, 43, 8, 22, 46, 29, 14, 7, 6, 12, 44, 25, 18, 33, 21, 41, 48, 35, 48, 25, 40, 37, 32, 9, 31, 47, 13, 28, 9, 31, 14, 20, 21, 29, 36, 45, 4, 17, 38, 23, 14, 38, 49, 43, 27, 39, 29, 33, 39, 50, 11, 12, 24, 19, 42, 5, 49, 38, 46, 42, 2, 19, 19, 50, 47, 49, 41, 31, 37, 1, 4, 43, 23, 26, 49, 11, 43, 45, 39, 12, 11, 4, 3, 4, 32, 26, 17, 34, 26, 34, 27, 12, 24, 13, 39, 9, 20, 14, 37, 19, 40}), 49);

        test(obj.solve(
                    new int[]{49, 11, 11, 11, 11, 49, 49, 49, 11, 11, 49, 49, 11, 32, 11, 11, 32, 11, 11, 32, 11, 11, 32, 49, 32, 32, 32, 11, 49, 49, 11, 11, 11, 49, 49, 49, 49, 11, 32, 32, 32, 49, 49, 11, 49, 49, 49, 32, 32, 11},
                    new int[]{7, 26, 10, 11, 47, 35, 23, 26, 16, 13, 28, 23, 44, 9, 10, 22, 29, 22, 3, 19, 20, 21, 31, 30, 9, 24, 42, 24, 47, 36, 39, 3, 37, 32, 11, 45, 11, 17, 50, 41, 40, 27, 2, 37, 18, 23, 1, 16, 23, 23, 25, 1, 44, 21, 11, 16, 13, 33, 39, 1, 14, 27, 17, 15, 44, 48, 16, 38, 4, 41, 2, 15, 8, 50, 25, 50, 12, 19, 5, 15, 24, 12, 47, 39, 9, 11, 37, 23, 49, 26, 15, 38, 43, 16, 50, 36, 39, 31, 27, 3, 31, 11, 45, 42, 2, 9, 24, 42, 41, 30, 44, 9, 38, 50, 36, 17, 39, 25, 12, 39, 23, 41, 33, 10, 48, 17, 34, 45, 37, 16, 8, 49, 16, 26, 10, 13, 20, 47, 16, 36, 8, 18, 8, 41, 17, 37, 21, 37, 7, 3, 26},
                    new int[]{35, 48, 5, 46, 8, 42, 49, 20, 21, 50, 10, 27, 16, 38, 33, 38, 34, 5, 5, 31, 25, 10, 9, 34, 4, 29, 8, 12, 36, 30, 17, 15, 47, 15, 34, 36, 43, 25, 32, 40, 39, 20, 32, 6, 21, 14, 42, 45, 5, 30, 40, 44, 20, 50, 10, 30, 41, 14, 20, 33, 46, 37, 26, 1, 24, 22, 28, 20, 1, 39, 26, 35, 28, 37, 12, 14, 15, 22, 34, 19, 27, 46, 42, 35, 19, 38, 46, 15, 33, 31, 17, 25, 5, 4, 27, 28, 7, 49, 48, 21, 5, 45, 34, 13, 33, 10, 49, 5, 24, 49, 10, 39, 7, 38, 17, 21, 5, 23, 35, 28, 37, 21, 23, 22, 33, 4, 2, 14, 13, 27, 35, 34, 20, 21, 30, 10, 8, 1, 26, 22, 33, 30, 3, 22, 47, 9, 12, 30, 1, 10, 29}), 4);

        test(obj.solve(
                    new int[]{36, 36, 49, 49, 49, 49, 46, 46, 49, 49, 46, 50, 50, 49, 50, 36, 46, 36, 49, 50, 46, 21, 36, 21, 50, 46, 50, 46, 50, 49, 36, 46, 36, 50, 50, 46, 21, 21, 21, 36, 46, 50, 46, 50, 46, 50, 36, 36, 46, 36},
                    new int[]{12, 1, 43, 39, 25, 49, 25, 2, 15, 16, 5, 22, 50, 7, 10, 17, 23, 8, 17, 17, 10, 50, 31, 26, 11, 46, 5, 26, 45, 34, 30, 21, 23, 12, 48, 35, 15, 30, 44, 33, 39, 44, 24, 4, 6, 28, 5, 48, 37, 14, 13, 45, 14, 43, 3, 45, 21, 45, 35, 49, 43, 9, 34, 27, 25, 43, 16, 32, 29, 46, 25, 29, 45, 46, 6, 24, 10, 40, 15, 37, 11, 38, 10, 4, 33, 20, 14, 11, 40, 38, 1, 4, 7, 24, 41, 39, 16, 14, 38, 23, 35, 19, 29, 21, 31, 22, 46, 16, 19, 47, 38, 37, 49, 39, 43, 38, 24, 24, 41, 27, 38, 30, 37, 6, 13, 10, 17, 22, 14, 45, 12, 28, 12, 3, 42, 50, 31, 47, 25, 23, 20, 10, 37, 12, 15, 45, 49, 4, 23, 7, 32, 11, 5, 50, 35, 20, 4, 42, 6, 4},
                    new int[]{42, 47, 8, 37, 42, 36, 46, 23, 29, 1, 4, 37, 40, 32, 3, 41, 40, 32, 49, 28, 5, 31, 16, 28, 45, 44, 14, 45, 7, 25, 3, 45, 18, 20, 40, 29, 13, 19, 35, 50, 38, 27, 37, 9, 19, 27, 12, 49, 40, 12, 7, 40, 28, 9, 27, 44, 29, 30, 1, 44, 47, 30, 3, 24, 44, 33, 13, 12, 4, 41, 47, 38, 49, 21, 27, 32, 13, 6, 25, 50, 6, 11, 8, 30, 24, 35, 15, 7, 28, 22, 20, 25, 28, 1, 37, 20, 42, 2, 12, 16, 23, 2, 2, 28, 29, 50, 16, 5, 7, 48, 7, 47, 22, 31, 45, 16, 15, 21, 26, 47, 3, 27, 36, 24, 5, 26, 1, 4, 29, 47, 40, 35, 29, 17, 15, 17, 13, 6, 8, 4, 24, 36, 28, 50, 49, 20, 38, 19, 32, 2, 30, 17, 34, 3, 30, 15, 11, 30, 15, 20}), 1);

    }
}
